<script>
    {% capture locales %}
    {
    {% if settings.multilanguage %}
        {% for locale in shop.enabled_locales %}
        "{{locale.iso_code | downcase}}": {
        primary: {{locale.primary}},
        url: "{{locale.root_url}}"
        },
        {% endfor %}
    {% endif %}
    }
    {% endcapture %}
    {% capture currencies %}
    [
    {% unless settings.shopCurrency == 'none' %}
    {% if settings.shopCurrency == 'convert' %}
        {% assign currencyArr = settings.enabledCurrencies | upcase | replace: ' ', '' | split: ',' %}
        {% unless currencyArr contains shop.currency.iso_code %}
        "{{shop.currency.iso_code | upcase}}",
        {% endunless %}
        {% for currency in currencyArr %}
        "{{currency | strip}}",
        {% endfor %}
    {% else %}
        {% for currency in shop.enabled_currencies %}
            "{{currency.iso_code | upcase}}",
        {% endfor %}
    {% endif %}
    {% endunless %}
    ]
    {% endcapture %}

    const bstri18n = {
    locales: {{locales}},
    currencies: {{currencies}},
    currency_mode: "{{settings.shopCurrency}}",
    currency_format: '{{shop.money_with_currency_format}}',
    all_products_route: "{{routes.all_products_collection_url}}"
    }

    {% capture emptySearch %}
    {% for item in collections[settings.emptySearch].products limit: 5 %}
        <div class="col-12{% unless settings.headerType == 'inline-search' %} col-md-1-5{% endunless %}">
        {% render 'product-card-search', product: item, dsize: '1-5' %}
        </div>
    {% endfor %}
    {% endcapture %}
    const emptySearch = `{{emptySearch}}`;
    {% render 'shop-info' %}
    const _settings = {{settings | json}};
    const _bstrLocale = {
    buttons: {
        sold_out: `{{'general.buttons.sold_out' | t | strip}}`,
        select: `{{'general.buttons.add_to_cart_selection' | t | strip}}`,
        adding: `{{'general.buttons.add_to_cart_loading' | t | strip}}`,
        checking_out: `{{'general.buttons.checkout_loading' | t | strip}}`,
        back_to_shop: `{{'navigation.buttons.back_to_shop' | t | strip}}`
    },
    tags: {
        off: `{{'general.tags.off'|t|strip}}`,
        sale: `{{'general.tags.sale'|t|strip}}`
    },
    recentlyBought: {
        purchased: `{{'recently_bought.purchased' | t | strip}}`,
        ago: `{{'recently_bought.ago' | t | strip}}`,
        someone: `{{'recently_bought.someone' | t | strip}}`
    }
    }
</script>

<template id="productCardTemplate">
    {% render 'product-card-template' %}
</template>

{% if settings.productCompare %}
    <template id="productCompareVendor">
        <div class='compare-product-vendor--wrapper'>
            <div class='compare-prodcut-vendor--header'>
              <h2> Vendor </h2>
            </div>
            
            <div class='compare-product-vendor--content' data-product-compare-vendor> </div>
          </div>
    </template>
    
    <template id="productCompareAvailability">
        <div class='compare-product-availability--wrapper'>
            <div class='compare-prodcut-availability--header'>
              <h2> Availability </h2>
            </div>
            
            <div class='compare-product-availability--content' data-product-compare-availability>  </div>
          </div>
    </template>
    
    <template id="productCompareDescription">
        <div class='compare-product-description--wrapper'>
            <div class='compare-prodcut-description--header'>
              <h2> Description </h2>
            </div>
    
            <div class='compare-product-description--content' data-product-compare-description> </div>
          </div>
    </template>
    
    <template id="productCompareCard">
        <div class='compare-product-card--wrapper' id="compare-product-card"> 
          <div class='compare-product-card'>
            <div class='compare-product-card--img'>
              <img data-compare-product-image src="" />
            </div>
    
            <div class='compare-product-card--content'>
                <p class='compare-product-card--compare_at_price' data-compare-compare-at-price> </p>
                <p class='compare-product-card--price' data-compare-product-price> </p>
                <p class='compare-product-card--title' data-compare-product-title> </p>
            </div>
          </div>
          <div class='compare-product-card--atc'>
            {% comment %} {% render 'add-to-cart-button', variant: compareProduct.selected_or_first_available_variant.id, quantity: , price: compareProduct.price %} {% endcomment %}
          </div>
        </div>
    </template>
    
    <template id="productCompareTemplate">
        <div class="product-compare-drawer__item">
            <div class="product-compare-drawer__image">
            <img src="" class="product-compare--image" data-product-compare-drawer-image />
            </div>
            <a class="product-compare-drawer__item-title" data-product-compare-drawer-title></a>
            <button class="product-compare-drawer__remove" data-product-compare-drawer-remove data-product-compare-id>
                <svg class="icon-remove product-compare-drawer__remove-icon" aria-hidden="true" focusable="false" role="presentation" xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10">      <path fill="currentColor" d="M6.08785659,5 L9.77469752,1.31315906 L8.68684094,0.225302476 L5,3.91214341 L1.31315906,0.225302476 L0.225302476,1.31315906 L3.91214341,5 L0.225302476,8.68684094 L1.31315906,9.77469752 L5,6.08785659 L8.68684094,9.77469752 L9.77469752,8.68684094 L6.08785659,5 Z"></path>    </svg>                                              
            </button>
        </div>
    </template>

    <template id="productCompareDisableTemplate">
        <div class="product-compare-drawer__item--disabled">
            <a class="product-compare-drawer__item-title" data-product-compare-drawer-title> </a>
        </div>
    </template>
{% endif %}

<script>
{% comment %} Load designMode Javascript {% endcomment %}
{% comment %} setTimeout to deprioritize in the main thread and event loop {% endcomment %}
setTimeout(
    ()=>{
        if (!Shopify.designMode) return
        const script = document.createElement("script")
        script.setAttribute("async", "true")
        script.setAttribute("defer", "true")
        script.setAttribute("type", "text/javascript")
        script.src = "{{ 'designMode.js' | asset_url }}"
        document.body.append(script)
    }, 
    0
)
</script>

<script>
{% comment %} Load a smooth scroll polyfill (iOS devices) {% endcomment %}
{% comment %} setTimeout to deprioritize in the main thread and event loop {% endcomment %}
setTimeout(
    () => {
        if('scrollBehavior' in document.documentElement.style) return
        const script = document.createElement("script")
        script.setAttribute("async", "true")
        script.setAttribute("defer", "true")
        script.setAttribute("type", "text/javascript")
        script.src = "{{ 'smooth-scroll.poly.js' | asset_url }}"
        document.body.append(script)
    }, 
    0
)
</script>